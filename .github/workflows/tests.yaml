name: Tests

on:
  push:
  pull_request:

jobs:
  functional-tests:
    runs-on: ${{ matrix.os }}
    env:
      SELENIUM_SERVER_VERSION: ${{ matrix.selenium-server-version }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        browser: ['chrome']
        selenium-server: [true]
        selenium-server-version:
          - 3.141.59
          - 4.4.0
        w3c: [true]

    name: "Selenium server ${{ matrix.selenium-server-version }}"

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: mbstring, intl, zip
          coverage: xdebug

      - name: Install PHP dependencies
        run: composer update --no-interaction

      - name: Start Selenium standalone server
        if: ${{ matrix.selenium-server }}
        run: |
          mkdir -p build logs
          if [ "$SELENIUM_SERVER_VERSION" = "3.141.59" ]; then
            SELENIUM_SERVER_DOWNLOAD_URL=https://github.com/SeleniumHQ/selenium/releases/download/selenium-3.141.59/selenium-server-standalone-3.141.59.jar
          else
            SELENIUM_SERVER_DOWNLOAD_URL=https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.4.0/selenium-server-4.4.0.jar
          fi

          wget -q -t 3 -O build/selenium-server.jar $SELENIUM_SERVER_DOWNLOAD_URL
          if [ "$SELENIUM_SERVER_VERSION" = "3.141.59" ]; then
            java -jar build/selenium-server.jar -version
            xvfb-run --server-args="-screen 0, 1280x720x24" --auto-servernum java -jar build/selenium-server.jar -log logs/selenium-server.log &
          else
            java -jar build/selenium-server.jar standalone --version
            xvfb-run --server-args="-screen 0, 1280x720x24" --auto-servernum java -jar build/selenium-server.jar standalone --log logs/selenium-server.log &
          fi

      - name: Start local PHP server
        run: |
          php -S 127.0.0.1:8000 -t tests/functional/web/ &> ./logs/php-server.log &

      - name: Wait for browser & PHP to start
        run: |
          while ! nc -z localhost 4444 </dev/null; do echo Waiting for remote driver to start...; sleep 1; done
          while ! nc -z localhost 8000 </dev/null; do echo Waiting for PHP server to start...; sleep 1; done

      - name: Run tests
        env:
          BROWSER_NAME: ${{ matrix.browser }}
        run: |
          if [ "$BROWSER_NAME" = "chrome" ]; then EXCLUDE_GROUP+="exclude-chrome,"; fi
          if [ -n "$EXCLUDE_GROUP" ]; then EXTRA_PARAMS+=" --exclude-group $EXCLUDE_GROUP"; fi
          vendor/bin/phpunit --testsuite functional --filter WebDriverByTest -v --debug --colors=always --coverage-clover ./logs/clover.xml $EXTRA_PARAMS

      - name: Print logs
        if: ${{ always() }}
        run: |
          if [ -f ./logs/selenium-server.log ]; then cat ./logs/selenium-server.log; fi
          if [ -f ./logs/chromedriver.log ]; then cat ./logs/chromedriver.log; fi
          if [ -f ./logs/geckodriver.log ]; then cat ./logs/geckodriver.log; fi
          if [ -f ./logs/php-server.log ]; then cat ./logs/php-server.log; fi
          if [ "$BROWSER_NAME" = "safari" ]; then
            cat  ~/Library/Logs/com.apple.WebDriver/safaridriver.*
          fi
